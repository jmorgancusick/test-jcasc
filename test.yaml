security:
  scriptApproval:
    forceSandbox: false
    approvedSignatures:
    - "field hudson.model.Run project"
    - "method hudson.model.AbstractItem setDescription java.lang.String"
    - "method java.io.File getName"
    - "method java.security.MessageDigest digest"
    - "method java.security.MessageDigest update byte[]"
    - "method org.jenkinsci.plugins.workflow.support.steps.build.RunWrapper getRawBuild"
    - "new java.io.File java.lang.String"
    - "new java.util.LinkedHashMap"
    - "staticField java.io.File separator"
    - "staticMethod java.security.MessageDigest getInstance java.lang.String"
    - "staticMethod org.codehaus.groovy.runtime.EncodingGroovyMethods encodeHex byte[]"
    - "staticMethod org.codehaus.groovy.transform.ImmutableASTTransformation checkPropNames java.lang.Object java.util.Map"
credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "jack-jenkins-lts-github-pat"
              username: "jmorgancusick"
              password: "abc"
              description: "GitHub user and PAT for org scan"
jobs:
  - script: >
      // Org Setup
      organizationFolder('propel') {
        // General
        description("Propel GitHub org folder configured with JCasC")
        displayName('Propel')

        // "Projects"
        organizations {
          github {
            repoOwner("propelinc")
            apiUri("https://api.github.com")
            credentialsId("jack-jenkins-lts-github-pat")

            // "Traits" ("Behaviours" in the GUI) that are "declarative-compatible"
            traits {
              gitHubBranchDiscovery {
                // Values
                //  1 : Exclude branches that are also filed as PRs
                //  2 : Only branches that are also filed as PRs
                //  3 : All branches
                strategyId(1)
              }

              gitHubPullRequestDiscovery {
                // Values
                // 1 : Merging the pull request with the current target branch revision
                // 2 : The current pull request revision
                // 3 : Both the current pull request revision and the pull request merged with the current target branch revision
                strategyId(2)
              }

              gitHubForkDiscovery {
                // Values
                // 1 : Merging the pull request with the current target branch revision
                // 2 : The current pull request revision
                // 3 : Both the current pull request revision and the pull request merged with the current target branch revision
                strategyId(2)

                trust {
                  gitHubTrustPermissions()
                }
              }

              pruneStaleBranch()
              pruneStaleTag()
            }
          }
        }

        // Project Recognizers
        projectFactories{
          workflowMultiBranchProjectFactory {
            scriptPath('Jenkinsfile')
          }
        }
        // Orphaned Item Strategy
        orphanedItemStrategy {
          discardOldItems {}
        }

        properties {
          // Pipeline Libraries
          folderLibraries {
            libraries {
              libraryConfiguration {
                name('jenkins-shared-library')
                defaultVersion('main')
                allowVersionOverride(true)
                includeInChangesets(true)
                retriever {
                  modernSCM {
                    scm {
                      git {
                        remote('https://github.com/propelinc/jenkins-shared-library.git')
                        credentialsId('jack-jenkins-lts-github-pat')
                      }
                    }
                  }
                }
              }
            }
          }
          
          // Automatic branch project triggering
          suppressFolderAutomaticTriggering {
            branches('.*')

            // Values
            // 'INDEXING' : For matching branches suppress builds triggered by indexing (continue to honor webhooks)
            // 'EVENTS' : For matching branches suppress builds triggered by webhooks (continue to trigger from indexing)
            // 'NONE' : For matching branches schedule all builds (nothing is suppressed)
            strategy('INDEXING')
          }
        }

        // "Scan Organization Folder Triggers" : 1 day
        // We need to configure this stuff by hand because JobDSL only allow 'periodic(int min)' for now
        configure { node ->
          node / triggers / 'com.cloudbees.hudson.plugins.folder.computed.PeriodicFolderTrigger' {
            spec('H H * * *')
            interval(86400000)
          }
        }
      }
      