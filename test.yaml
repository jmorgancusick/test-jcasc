jenkins:
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - kubernetes:
      containerCap: 200
      containerCapStr: "200"
      jenkinsTunnel: "jenkins-agent.jenkins-lts.svc.cluster.local:50000"
      jenkinsUrl: "http://jenkins.jenkins-lts.svc.cluster.local:8080"
      name: "kubernetes"
      namespace: "jenkins-lts"
      podLabels:
      - key: "jenkins/jenkins-jenkins-agent"
        value: "true"
      serverUrl: "https://kubernetes.default"
      templates:
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          envVars:
          - envVar:
              key: "JENKINS_URL"
              value: "http://jenkins.jenkins-lts.svc.cluster.local:8080/"
          image: "jenkins/inbound-agent:3283.v92c105e0f819-9"
          name: "jnlp"
          resourceLimitCpu: "512m"
          resourceLimitMemory: "512Mi"
          resourceRequestCpu: "512m"
          resourceRequestMemory: "512Mi"
          workingDir: "/home/jenkins/agent"
        id: "16b8c82fd305e7fec31fc63fcdd70f3b954c6d2498bd7a2d6fc173ad6b37924f"
        label: "jenkins-jenkins-agent"
        name: "default"
        namespace: "jenkins-lts"
        nodeUsageMode: "NORMAL"
        podRetention: "never"
        serviceAccount: "default"
        slaveConnectTimeout: 100
        slaveConnectTimeoutStr: "100"
        yamlMergeStrategy: "override"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  labelAtoms:
  - name: "built-in"
  - name: "jenkins-jenkins-agent"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "Jenkins Admin"
        properties:
        - "apiToken"
        - "consoleUrlProvider"
        - "mailer"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  prism:
    theme: PRISM
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: false
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  scriptApproval:
    forceSandbox: false
unclassified:
  ansiColorBuildWrapper:
    colorMaps:
    - black: "#000000"
      blackB: "#4C4C4C"
      blue: "#1E90FF"
      blueB: "#4682B4"
      cyan: "#00CDCD"
      cyanB: "#00FFFF"
      green: "#00CD00"
      greenB: "#00FF00"
      magenta: "#CD00CD"
      magentaB: "#FF00FF"
      name: "xterm"
      red: "#CD0000"
      redB: "#FF0000"
      white: "#E5E5E5"
      whiteB: "#FFFFFF"
      yellow: "#CDCD00"
      yellowB: "#FFFF00"
    - black: "#000000"
      blackB: "#555555"
      blue: "#0000AA"
      blueB: "#5555FF"
      cyan: "#00AAAA"
      cyanB: "#55FFFF"
      defaultBackground: 0
      defaultForeground: 7
      green: "#00AA00"
      greenB: "#55FF55"
      magenta: "#AA00AA"
      magentaB: "#FF55FF"
      name: "vga"
      red: "#AA0000"
      redB: "#FF5555"
      white: "#AAAAAA"
      whiteB: "#FFFFFF"
      yellow: "#AA5500"
      yellowB: "#FFFF55"
    - black: "black"
      blackB: "black"
      blue: "blue"
      blueB: "blue"
      cyan: "cyan"
      cyanB: "cyan"
      green: "green"
      greenB: "green"
      magenta: "magenta"
      magentaB: "magenta"
      name: "css"
      red: "red"
      redB: "red"
      white: "white"
      whiteB: "white"
      yellow: "yellow"
      yellowB: "yellow"
    - black: "#2E3436"
      blackB: "#2E3436"
      blue: "#3465A4"
      blueB: "#3465A4"
      cyan: "#06989A"
      cyanB: "#06989A"
      defaultBackground: 0
      defaultForeground: 7
      green: "#4E9A06"
      greenB: "#4E9A06"
      magenta: "#75507B"
      magentaB: "#75507B"
      name: "gnome-terminal"
      red: "#CC0000"
      redB: "#CC0000"
      white: "#D3D7CF"
      whiteB: "#D3D7CF"
      yellow: "#C4A000"
      yellowB: "#C4A000"
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    hookUrl: "https://jenkins-lts.easyfoodstamps.com/github-webhook/"
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "https://jenkins-lts.easyfoodstamps.com/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
credentials:
  system:
    domainCredentials:
      - credentials:
          - string:
          - usernamePassword:
              scope: GLOBAL
              id: "jack-jenkins-lts-github-pat"
              username: "jmorgancusick"
              password: "abc"
              description: "GitHub user and PAT for org scan"
jobs:
  - script: >
      // Org Setup
      organizationFolder('propel') {
        // General
        description("Propel GitHub org folder configured with JCasC")
        displayName('Propel')

        // "Projects"
        organizations {
          github {
            repoOwner("propelinc")
            apiUri("https://api.github.com")
            credentialsId("jack-jenkins-lts-github-pat")

            // "Traits" ("Behaviours" in the GUI) that are "declarative-compatible"
            traits {
              gitHubBranchDiscovery {
                // Values
                //  1 : Exclude branches that are also filed as PRs
                //  2 : Only branches that are also filed as PRs
                //  3 : All branches
                strategyId(1)
              }

              gitHubPullRequestDiscovery {
                // Values
                // 1 : Merging the pull request with the current target branch revision
                // 2 : The current pull request revision
                // 3 : Both the current pull request revision and the pull request merged with the current target branch revision
                strategyId(2)
              }

              gitHubForkDiscovery {
                // Values
                // 1 : Merging the pull request with the current target branch revision
                // 2 : The current pull request revision
                // 3 : Both the current pull request revision and the pull request merged with the current target branch revision
                strategyId(2)

                trust {
                  gitHubTrustPermissions()
                }
              }

              pruneStaleBranch()
              pruneStaleTag()
            }
          }
        }

        // Project Recognizers
        projectFactories{
          workflowMultiBranchProjectFactory {
            scriptPath('Jenkinsfile')
          }
        }

        // Scan Organization Triggers
        

        // Orphaned Item Strategy
        orphanedItemStrategy {
          discardOldItems {}
        }

        properties {
          // Pipeline Libraries
          folderLibraries {
            libraries {
              libraryConfiguration {
                name('jenkins-shared-library')
                defaultVersion('main')
                allowVersionOverride(true)
                includeInChangesets(true)
                retriever {
                  modernSCM {
                    scm {
                      git {
                        remote('https://github.com/propelinc/jenkins-shared-library.git')
                        credentialsId('jack-jenkins-lts-github-pat')
                      }
                    }
                  }
                }
              }
            }
          }
          
          // Automatic branch project triggering
          suppressFolderAutomaticTriggering {
            branches('.*')

            // Values
            // 'INDEXING' : For matching branches suppress builds triggered by indexing (continue to honor webhooks)
            // 'EVENTS' : For matching branches suppress builds triggered by webhooks (continue to trigger from indexing)
            // 'NONE' : For matching branches schedule all builds (nothing is suppressed)
            strategy('INDEXING')
          }
        }

        // "Scan Organization Folder Triggers" : 1 day
        // We need to configure this stuff by hand because JobDSL only allow 'periodic(int min)' for now
        configure { node ->
          node / triggers / 'com.cloudbees.hudson.plugins.folder.computed.PeriodicFolderTrigger' {
            spec('H H * * *')
            interval(86400000)
          }
        }
      }
      
      // Approved Scripts Setup
      import org.jenkinsci.plugins.scriptsecurity.scripts.*
      ScriptApproval scriptApproval = ScriptApproval.get()
      scriptApproval.clearApprovedSignatures()
      [
        "003f7e63f60f4d2787313fbc4a4b12cd6ed75cf8",
        "017d0db438428731cd600b6ebda805065433520f",
        "07b027fd04a8f55c2b71529126a2eb44e77360c4",
        "0843bdaeb52dd48a96bc460f53c9ecaff0eccf25",
        "15b8e6fba9f8a32d1ef75a8e9c7c5dc5b240167d",
        "20f2ecd49fe9bf3c9cf927264c6fdfeea2cddb36",
        "3648fafa37c931ccb3f3687c67b956cb2b88b556",
        "3c37469928b478b666246aa59467b0abe97218f9",
        "3ce1f8cc7a8f4f9f9283fd65a5dc0ab56c5c7655",
        "439b29449e1dcff49b3251dd719191c6c7776bf9",
        "439dbe2c4962613241e7767ca6b1223cf400b79d",
        "60eba59930545aa492a316416eb03afaa275ed9c",
        "65b97048731be7199dfec2602444600ea90ba8b5",
        "66a4cbd2878bd5e757f9607de9239bde792eb3e2",
        "68d922a44a9f23d6eb63d32652d0f1dd3cc9f8b9",
        "71463010aef15ec76047f959ade7522ac6f0837b",
        "7f5d824bf98358ce62335a5240494f2fca95d76a",
        "85d5fe96d3c0a4c8fe60b4eb2b9432f2fdc94698",
        "8b68652d178acff42bd2c53efedfc9dbdecfb9e2",
        "8fb9d6669b1283ff3793b49d15349960884135ce",
        "9a5d3e27aed421a96493520a48492b8bceb498a8",
        "b23490b3b591c5c1a9c9045958f8b613582d7c9b",
        "c679377d0eb5206b9131f422a856435265d4d838",
        "c884241caff28ae7242147695971a3d5476dd984",
        "d7c32c183e9741cdd76678a954c80d5b24dc3d68",
        "e18fa1420291d30dcba96d461222ea34bee7a0f8",
        "ed29cb7b65903e19135e15a0564d9c7b5ceea2e9",
        "ff0b0e31cff78ab895a6084c2073140351ae82e2"
      ].each { hash ->
          scriptApproval.approveScript(hash)
      }
      scriptApproval.save()
